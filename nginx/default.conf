upstream cluster_frontend {
     server laravel:9000;
# We can use laravel-worker container as backup if laravel container under maintenance
     server laravel_worker:9000 backup;
}
upstream cluster_socketio {
     least_conn;
     server socketio:6001;
}

server {
    listen          80;

    location /socket.io {
            access_log off;
            proxy_pass http://cluster_socketio;
	    proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
    }

    charset utf-8;
    # set max upload size
    client_max_body_size 200M;

    location /cdn {
        root /app/storage/app;
        expires 30d;
        log_not_found off;
    }

    index index.php index.html index.htm;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    root /app/public;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    location ~* \.(css|js)$ {
                access_log off;
                expires 30d;
                log_not_found off;
    }

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        error_log  /app/storage/logs/nginx-error.log error;
        try_files \$uri /index.php =404;
        fastcgi_pass cluster_frontend;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location ~ /\.ht {
        deny  all;
    }
}

server {
    listen          6001;

    location / {
            access_log off;
            proxy_pass http://cluster_socketio;
	    proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
    }
}
